const TOKEN = '1231768718:AAGvxd5DKdOiEBXyvfcIYxaKKrteCySUGPs'
const { Telegraf } = require('telegraf')

const bot = new Telegraf(TOKEN)
const low = require('lowdb')
const FileSync = require('lowdb/adapters/FileSync')
const adapter = new FileSync('db.json')
const db = low(adapter)
let id = 0
let TeacherPUSH = ''
let subPUSH = ''
let numberMONTH = 0
const group = 'M3106'
const groupRU = '–ú3106'

bot.catch((err, ctx) => {
  console.log(`–ü—Ä–∏–ª–µ—Ç–µ–ª–∞ –æ—à–∏–±–æ—á–∫–∞: ${ctx.updateType}`, err)
})

db.defaults({ info: [] })
  .write()

bot.start((ctx) => {
  ctx.reply(`
_/list_ - –æ—Ç—Å—ã–ª–∞–µ—Ç –≤—Å–µ –¥–µ–¥–ª–∞–π–Ω—ã —Å –¥–∞—Ç–∞–º–∏
_/add_ - –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –¥–µ–¥–ª–∞–π–Ω 
_/remove_ - —É–¥–∞–ª—è–µ—Ç –æ—à–∏–±–æ—á–Ω—ã–π –¥–µ–¥–ª–∞–π–Ω 
_/sos_ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–ø–∞—Ä–≥–∞–ª–∫—É –ø–æ –ø—Ä–µ–ø–æ–¥–∞–º, –∏—Ö —Å–∏—Å—Ç–µ–º–∞–º —Å–¥–∞—á–∏ –ª–∞–±, –≤—Å–µ –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –∏ —Ç–¥ 
_/help_ - –ø–æ–ª—É—á–∏ –ø–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞
  `, { parse_mode: 'Markdown' })
})

bot.command('list', (ctx) => {
  const arrayLength = db.get('info').value().length
  const text = []
  for (let i = 0; i < arrayLength; i++) {
    db.get(`info[${i}]`).assign({ count: i + 1 }).write()
    text[i] = `
${db.get('info').sortBy('count').value()[i].count}. *${db.get('info').sortBy('count').sortBy('number').value()[i].type}*
üë®üèª‚Äçüè´ _–£—á–∏—Ç–µ–ª—å_ -  *${db.get('info').sortBy('count').sortBy('number').value()[i].teacher}*
üóì _–î–∞—Ç–∞ —Å–¥–∞—á–∏_ - *${db.get('info').sortBy('count').sortBy('number').value()[i].date}*`
  }
  if (arrayLength === 0) {
    ctx.reply('üé∞ *–î–µ–¥–ª–∞–π–Ω–æ–≤ –Ω–µ—Ç!* üé∞', { parse_mode: 'Markdown' })
  } else {
    ctx.reply(`
üìç *–î–µ–¥–ª–∞–π–Ω—ã –¥–ª—è ${group}* üìç
${text.join('\n ')}
  
_–ï—Å–ª–∏ —Ç—ã –∑–Ω–∞–µ—à—å –µ—â–µ –∫–∞–∫–∏–µ-—Ç–æ –¥–µ–¥–ª–∞–π–Ω—ã, —Ç–æ –¥–æ–±–∞–≤—å –∏—Ö –≤ –±–æ—Ç–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /add, –≤—Å–µ –±—É–¥—É—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã_
  `, { parse_mode: 'Markdown' })
  }
})

bot.hears(/add ([–∞-—è.]+) (.+) (.+)/, ({ reply, match, err }) => {
  const SUBJECT = new RegExp(match[1], 'gim')
  const DATE = match[2]
  const PASSWORD = match[3]
  const LENGTH_ARRAY_TEACHERS = 6
  const monthNumber = [
    {
      month: ' —è–Ω–≤–∞—Ä—è',
      number: '01'
    },
    {
      month: ' —Ñ–µ–≤—Ä–∞–ª—è',
      number: '02'
    },
    {
      month: ' –º–∞—Ä—Ç–∞',
      number: '03'
    },
    {
      month: ' –∞–ø—Ä–µ–ª—è',
      number: '04'
    },
    {
      month: ' –º–∞—è',
      number: '05'
    },
    {
      month: ' –∏—é–Ω—è',
      number: '06'
    },
    {
      month: ' –∏—é–ª—è',
      number: '07'
    },
    {
      month: ' –∞–≤–≥—É—Å—Ç–∞',
      number: '08'
    },
    {
      month: ' —Å–µ–Ω—Ç—è–±—Ä—è',
      number: '09'
    },
    {
      month: ' –æ–∫—Ç—è–±—Ä—è',
      number: '10'
    },
    {
      month: ' –Ω–æ—è–±—Ä—å',
      number: '11'
    },
    {
      month: ' –¥–µ–∫–∞–±—Ä—è',
      number: '12'
    }]

  const MONTH_DAY = DATE.match(/\d+/)[0]
  const MONTH_NAME = new RegExp(DATE.match(/\D+/)[0], 'gim')
  if (err) {
    throw new Error('–¢—ã –≤–≤–µ–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
  }

  if (PASSWORD === undefined || PASSWORD === null) {
    reply('–ù–µ—Ç –ø–∞—Ä–æ–ª—è')
  }

  for (let i = 0; i < monthNumber.length; i++) {
    if (monthNumber[i].month.match(MONTH_NAME)) {
      numberMONTH = parseInt(`${MONTH_DAY}${monthNumber[i].number}`, 10)
    }
  }

  id += 1
  for (let i = 0; i < LENGTH_ARRAY_TEACHERS; i++) {
    if (db.get(`teachers[${i}].subject`).value().match(SUBJECT)) {
      subPUSH = db.get(`teachers[${i}].subject`).value()
      for (let j = 0; j < LENGTH_ARRAY_TEACHERS; j++) {
        if (db.get(`teachers[${j}].subject`).value() === subPUSH) {
          TeacherPUSH = db.get(`teachers[${j}].teacher`).value()
        }
      }
    }
  }

  if (group.match(new RegExp(PASSWORD, 'gim')) || groupRU.match(new RegExp(PASSWORD, 'gim'))) {
    if (subPUSH !== '') {
      db.get('info').push({
        type: subPUSH,
        teacher: TeacherPUSH,
        date: DATE,
        count: id,
        number: numberMONTH
      }).write()
      reply('–°–ø–∞—Å–∏–±–æ, –¥–æ–±–∞–≤–∏–ª –ª–∞–±—É ‚úÖ')
    } else {
      reply('–£–≤—ã, –Ω–æ —è –Ω–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —É–º–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–∏ –º–æ–¥–Ω—ã–µ —Å–ª–æ–≤–∞. –ë—É–¥—É —Ä–∞–¥, –µ—Å–ª–∏ –Ω–∞–ø–∏—à–µ—à—å –ø—Ä–µ–¥–º–µ—Ç –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º, —Ö–æ—Ç—è –±—ã —á–∞—Å—Ç–∏—á–Ω–æ')
    }
  } else { reply('–ü–∞—Ä–æ–ª—å –ª–∞–∂–∞, –ø—Ä–æ–±—É–π –µ—â–µ') }
})

bot.hears(/remove (.+) (.+)/, ({ reply, match }) => {
  const arrayLength = db.get('info').value().length
  const number = match[1]
  const PASSWORD = match[2]

  db.get('info').remove({ count: parseInt(number, 10) }).write()
  if (group.match(new RegExp(PASSWORD, 'gim')) || groupRU.match(new RegExp(PASSWORD, 'gim'))) {
    if (arrayLength > 0 && number !== 'all') {
      reply(`–£–¥–∞–ª–∏–ª –ª–∞–±—É –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${number}üö´`)
    } else if (number > 0) {
      reply('–õ–∞–± –Ω–µ—Ç—É, –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å')
    }
    if (number === 'all') {
      db.get('info').remove().write()
      reply('–°—Ç–µ—Ä –≤—Å–µ –ª–∞–±—ã')
    }
  } else { reply('–ü–∞—Ä–æ–ª—å –ª–∞–∂–∞, –ø—Ä–æ–±—É–π –µ—â–µ') }
})

bot.command('sos', (ctx) => {
  ctx.reply(
`‚ùó*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞—Ö –∏ –∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö, –∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è ${group}*‚ùó

1. *–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ*
¬∑ –ü—Ä–µ–ø–æ–¥ - _–ü–æ–≤—ã—à–µ–≤ –í–ª–∞–¥–∏—Å–ª–∞–≤ –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á_
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](https://yadi.sk/d/zzdHYM-D5kJmNQ?w=1)
¬∑ –ß–∞—Ç–∏–∫ - [—Ç—ã–∫](https://t.me/c/1281776413/534)
¬∑ –°–¥–∞–µ–º —Ä–∞–∑ –≤ 2 –Ω–µ–¥–µ–ª–∏, —Ç.–µ. –∫ –∫–∞–∂–¥–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ 

2. *–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö*
¬∑ –ü—Ä–µ–ø–æ–¥ - _–ë—É–ª–∞–Ω–æ–≤–∞ –ù–∏–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞_
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](https://pcms.itmo.ru/pcms2client/party/contests.xhtml)
¬∑ –°–¥–∞–µ–º —Ä–∞–∑ –≤ 2 –Ω–µ–¥–µ–ª–∏, —Ç.–µ. –∫ –∫–∞–∂–¥–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ

3. *–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞*
¬∑ –ü—Ä–µ–ø–æ–¥ - _–ú–æ—Å–∫–∞–ª–µ–Ω–∫–æ –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞_
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](http://mathdep.ifmo.ru/mmtp/linal-angem/)
¬∑ –ß–∞—Ç–∏–∫ - [—Ç—ã–∫](https://t.me/joinchat/CGYtSB2cM3z3W6Bq4hgIWA)
¬∑ –°–¥–∞–µ–º –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é (?)

4. *–î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞*
¬∑ –ü—Ä–µ–ø–æ–¥ –ª–µ–∫—Ü–∏–π - _–ë—É–ª–∞–Ω–æ–≤–∞ –ù–∏–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞_
¬∑ –ü—Ä–µ–ø–æ–¥ –ª–∞–± - _–°—É–≤–æ—Ä–æ–≤ –î–º–∏—Ç—Ä–∏–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á_
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](http://mathdep.ifmo.ru/mmtp/linal-angem/) (–µ—â–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –±—É–¥—É—Ç –ª–∏ –æ–Ω–∏ –≤–æ–æ–±—â–µ)
¬∑ –ß–∞—Å—Ç–æ—Ç–∞ —Å–¥–∞—á–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞

5. *–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≠–í–ú*
¬∑ –ü—Ä–µ–ø–æ–¥ –ª–µ–∫—Ü–∏–π - _–ü–æ–≤—ã—à–µ–≤ –í–ª–∞–¥–∏—Å–ª–∞–≤ –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á_
¬∑ –ü—Ä–µ–ø–æ–¥—ã –ª–∞–± - _–ü–æ–ª–∏–Ω–∞ –∏ –î–∞–Ω—è_
¬∑ –ß–∞—Ç–∏–∫ - [—Ç—ã–∫](https://t.me/joinchat/Gss_bRjGd-IWGuAMiJTAxw)
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](https://oshnix.site/)
¬∑ –°–¥–∞–µ–º –¥/–∑ –∏ –ª–∞–±—ã —Ä–∞–∑ –≤ 2 –Ω–µ–¥–µ–ª–∏, —Ç.–µ. –∫ –∫–∞–∂–¥–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ 

6. *–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ü–∏—Ñ—Ä–æ–≤—É—é –∫—É–ª—å—Ç—É—Ä—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ*
¬∑ –ü—Ä–µ–ø–æ–¥ –ª–∞–± - _–°—Ç—Ä–∞–¥–∏–Ω–∞ –ú–∞—Ä–∏–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞_
¬∑ –õ–∞–±—ã - [—Ç—ã–∫](https://piazza.com/niuitmo.ru/summer2020/cs101/resources)
¬∑ –°–¥–∞–µ–º —Ä–∞–∑ –≤ 2 –Ω–µ–¥–µ–ª–∏, —Ç.–µ. –∫ –∫–∞–∂–¥–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ (?)


üéØ *–ü—Ä–µ–¥–º–µ—Ç—ã —Å –∑–∞—á–µ—Ç–æ–º* üéØ
¬∑  _–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫_
¬∑ _–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ü–∏—Ñ—Ä–æ–≤—É—é –∫—É–ª—å—Ç—É—Ä—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ_
¬∑ _–§–∏–∑—Ä–∞_

*–ü—Ä–µ–¥–º–µ—Ç—ã —Å –æ—Ü–µ–Ω–∫–∞–º–∏:*
¬∑ _–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≠–í–ú_ (–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞—á–µ—Ç)
¬∑ _–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö_
¬∑ _–î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞_
¬∑ _–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞_
¬∑ _–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ_ (–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞—á–µ—Ç)
¬∑ _–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑_


‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
üî• *–°—Å—ã–ª–∫–∏-—Å–ø–∞—Å–∞—Ç–µ–ª–∏ –Ω–∞ –≤–µ—Å—å —Å–µ–º–µ—Å—Ç—Ä* üî• 
1. [–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ—á—Ç–∏ –¥–ª—è –≤—Å–µ–≥–æ —Å Notion](https://www.notion.so/289f9628e0ac4ae3b779d68b629ac0dd)
2. [–ì–∏—Ç—Ö–∞–± —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –±–∞–ª–ª–∞–º –∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–∞–º–∏](https://github.com/y0f0/ITMO)
3. [–ö–Ω–∏–∂–∫–∏ –∏ –∫–æ–Ω—Å–ø–µ–∫—Ç—ã](https://drive.google.com/drive/folders/1JTte1XlZI47KAA0DD780_4w0haidU49e)

_–ö–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω—ã–º–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É –±–æ—Ç–∞, —á—Ç–æ–±—ã –æ–Ω –∏—Å–ø—Ä–∞–≤–∏–ª_`, { parse_mode: 'Markdown' })
})

bot.command('help', (ctx) => {
  ctx.reply(`
–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ - @sashafromlibertalia

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å *add* –∏ *remove*?
–î–ª—è *add* –ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –ª–∞–±—ã –∏ –¥–∞—Ç—É. –í—Å–µ.
–î–ª—è *remove* –ø–∏—à–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –ª–∞–±—ã. –í—Å–µ.
----------------
_/add –ø—Ä–æ–≥ 21 —Å–µ–Ω—Ç—è–±—Ä—è_

_/remove 3_
----------------

[–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π](github.com/sashafromlibertalia/ITMO_DeadlineBot) `, { parse_mode: 'Markdown' })
})

bot.hears(/—Ç–æ—Ö–∞ (.+)/, ({ reply }) => {
  const answers = [
    '–ü–∞—Ö—É—é –≤–∞—â–µ –Ω–∞ –≤—Å–µ',
    '–ó–∞–µ–±–∏—Å—å, —É–∑–Ω–∞–ª –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã',
    '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–∫–≤–µ—Ä–Ω–æ–µ, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–π—Ç–∏ –≤ —Å–∞–±–≤–µ–π',
    '–ù–∞–º –≤—Å–µ–º –ø–∏–∑–¥–∞ –¥–µ–≤–æ—á–∫–∏',
    '–¢—ã –∑–∞–µ–±–∞–ª —É–∂–µ —Å–æ —Å–≤–æ–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏',
    '–¢—ã –∑–∞–µ–±–∞–ª–∞ —É–∂–µ —Å–æ —Å–≤–æ–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏',
    '–ú–ù–ï –¢–ê–ö –ö–ê–ô–§–û–í–û –í–´ –ë–´ –ó–ù–ê–õ–ò –†–ï–ë–Ø–¢–ê!!!!',
    '–ê –≥–¥–µ —è? –≠—Ç–æ –°–ü–±–ì–£?',
    '–ò —Ç–µ–±–µ –≥–æ–≤–Ω–∞ –ø–æ–µ—Å—Ç—å –∂–µ–ª–∞—é)',
    '–ö—É—Ä—é —Ç—Ä–∞–≤—É –∏ –≥–æ–Ω—è—é —à–∞—Ä—ã - –∫–∞—Ä—å–µ—Ä–∞ —è–≤–Ω–æ –Ω–µ –Ω–∞ –≤–∑–ª–µ—Ç–µ',
    '–≠—Ç–æ –Ω–æ–≤—ã–π –∫–∞–¥–∏–ª–∞–∫!!!!!'
  ]
  reply(`${answers[Math.floor(Math.random() * answers.length)]}`)
})

bot.hears('/add', (ctx) => ctx.reply('–û—à–∏–±–∫–∞! –ì–¥–µ –º–Ω–µ –≤–∑—è—Ç—å –¥–∞—Ç—É –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞?'))
bot.hears('/remove', (ctx) => ctx.reply('–û—à–∏–±–∫–∞! –ö–∞–∫–æ–π –Ω–æ–º–µ—Ä –ª–∞–±—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –º–Ω–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å?'))
bot.hears(/remove (.+)/, ({ reply }) => { reply('–ù–µ—Ç –ø–∞—Ä–æ–ª—è, –ø–æ—ç—Ç–æ–º—É –Ω–µ —É–¥–∞–ª—é') })

bot.launch()
